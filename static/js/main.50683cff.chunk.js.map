{"version":3,"sources":["components/Footer/Footer.tsx","components/Logo/Logo.tsx","components/NoAudioMessage/NoAudioMessage.tsx","components/AudioContextProvider/useAudioContext.ts","domain/audio.ts","domain/sound.ts","state/Instrument/InstrumentContext.ts","state/Instrument/Provider.tsx","components/InstrumentSelector/options.ts","components/InstrumentSelector/InstrumentSelector.tsx","domain/keyboard.ts","domain/note.ts","components/PressObserver/usePressObserver.ts","components/Key/Key.tsx","components/Keyboard/Keyboard.tsx","components/Keyboard/WithInstrument.tsx","adapters/Soundfont/useSoundfont.ts","components/Playground/Playground.tsx","components/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","currentYear","Date","getFullYear","className","href","Logo","role","aria-label","NoAudioMessage","useAudioContext","useRef","window","AudioContext","webkitAudioContext","current","DEFAULT_INSTRUMENT","InstrumentContext","createContext","instrument","setInstrument","useInstrument","Consumer","useContext","InstrumentContextProvider","children","useState","Provider","value","options","instruments","map","label","replace","InstrumentSelector","onChange","target","TOP_ROW","Array","from","BOTTOM_ROW","NATURAL_PITCH_INDICES","PITCHES_REGISTRY","0","1","2","3","4","5","6","7","8","9","10","11","fromMidi","midi","pianoRange","index","octave","Math","floor","pitch","type","includes","notes","fromNote","toNote","fill","_","generateNotes","equal","watchedKey","eventCode","code","toUpperCase","Key","props","BackgroundColor","color","random","length","style","backgroundColor","boxShadow","onDown","onUp","rest","pressed","watchKey","onStartPress","onFinishPress","setPressed","useEffect","handlePressStart","handlePressFinish","document","addEventListener","removeEventListener","usePressObserver","clsx","onMouseDown","onMouseUp","Keyboard","loading","play","stop","selectKey","disabled","KeyboardWithInstrument","activeNodes","setCurrent","setLoading","player","setPlayer","audio","a","Soundfont","resume","state","Promise","resolve","note","node","toString","load","useSoundfont","Playground","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50683cff.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport \"./style.css\";\n\nexport const Footer: FunctionComponent = () => {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <footer className=\"footer\">\n      <a href=\"https://github.com/treb0ry/react-piano\">GitHub</a>\n      <br />\n      {currentYear}\n    </footer>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport \"./style.css\";\n\nexport const Logo: FunctionComponent = () => {\n  return (\n    <h1 className=\"logo\">\n      <span role=\"img\" aria-label=\"metal hand emoji\">\n        ðŸ¤˜\n      </span>\n      <span role=\"img\" aria-label=\"musical keyboard emoji\">\n        ðŸŽ¹\n      </span>\n      <span role=\"img\" aria-label=\"musical notes emoji\">\n        ðŸŽ¶\n      </span>\n    </h1>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\n\nexport const NoAudioMessage: FunctionComponent = () => {\n  return (\n    <div>\n      <p>Sorry,it's not gonna work ðŸ˜­</p>\n      <p>\n        Seems like your browser doesn't support <code>Audio API</code>.\n      </p>\n    </div>\n  );\n};\n","import { useRef } from \"react\";\nimport { Optional } from \"../../domain/types\";\nimport { accessContext } from \"../../domain/audio\";\n\nexport function useAudioContext(): Optional<AudioContextType> {\n  const AudioCtx = useRef(accessContext());\n  return AudioCtx.current;\n}\n","import { Optional } from \"./types\";\n\nexport function accessContext(): Optional<AudioContextType> {\n  return window.AudioContext || window.webkitAudioContext || null;\n}\n","import { InstrumentName, Player } from \"soundfont-player\";\nimport { MidiValue } from \"./note\";\nimport { Optional } from \"./types\";\n\nexport const DEFAULT_INSTRUMENT: InstrumentName = \"acoustic_grand_piano\";\nexport type AudioNodesRegistry = Record<MidiValue, Optional<Player>>;\n","import { createContext, useContext } from \"react\";\nimport { InstrumentName } from \"soundfont-player\";\nimport { DEFAULT_INSTRUMENT } from \"../../domain/sound\";\n\nexport interface ContextValue {\n  instrument: InstrumentName;\n  setInstrument: (instrument: InstrumentName) => void;\n}\n\nexport const InstrumentContext = createContext<ContextValue>({\n  instrument: DEFAULT_INSTRUMENT,\n  setInstrument() {},\n});\n\nexport const InstrumentContextConsumer = InstrumentContext.Consumer;\nexport const useInstrument = () => useContext(InstrumentContext);\n","import React, { FunctionComponent, useState } from \"react\";\nimport { DEFAULT_INSTRUMENT } from \"../../domain/sound\";\nimport { InstrumentContext } from \"./InstrumentContext\";\n\nexport const InstrumentContextProvider: FunctionComponent = ({ children }) => {\n  const [instrument, setInstrument] = useState(DEFAULT_INSTRUMENT);\n  return (\n    <InstrumentContext.Provider value={{ instrument, setInstrument }}>\n      {children}\n    </InstrumentContext.Provider>\n  );\n};\n","import { InstrumentName } from \"soundfont-player\";\nimport instruments from \"soundfont-player/names/musyngkite.json\";\ninterface Option {\n  value: InstrumentName;\n  label: string;\n}\n\ntype OptionsList = Option[];\ntype InstrumentList = InstrumentName[];\n\nfunction normalizeList(list: InstrumentList): OptionsList {\n  return list.map((instrument) => ({\n    value: instrument,\n    label: instrument.replace(/_/gi, \" \"),\n  }));\n}\n\nexport const options = normalizeList(instruments as InstrumentList);\n","import React, { FunctionComponent, ChangeEvent } from \"react\";\nimport { InstrumentName } from \"soundfont-player\";\nimport { useInstrument } from \"../../state/Instrument/InstrumentContext\";\nimport { options } from \"./options\";\nimport \"./style.css\";\n\nexport const InstrumentSelector: FunctionComponent = () => {\n  const { instrument, setInstrument } = useInstrument();\n  const updateValue = ({ target }: ChangeEvent<HTMLSelectElement>) =>\n    setInstrument(target.value as InstrumentName);\n\n  return (\n    <select className=\"instruments\" onChange={updateValue} value={instrument}>\n      {options.map(({ label, value }) => (\n        <option key={value} value={value}>\n          {label}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import { OctaveIndex, PitchIndex } from \"./note\";\n\nexport type Key = string;\nexport type Keys = Key[];\n\nexport const TOP_ROW: Keys = Array.from(\"q2w3er5t6y7u\");\nexport const BOTTOM_ROW: Keys = Array.from(\"zsxdcvgbhnjm\");\n\nexport function selectKey(octave: OctaveIndex, index: PitchIndex): Key {\n  const keysRow = octave < 5 ? TOP_ROW : BOTTOM_ROW;\n  return keysRow[index];\n}\n","export type NoteType = \"natural\" | \"flat\" | \"sharp\";\nexport type NotePitch = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\";\nexport type OctaveIndex = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\nexport type MidiValue = number;\nexport type PitchIndex = number;\n\nexport interface Note {\n  midi: MidiValue;\n  type: NoteType;\n  pitch: NotePitch;\n  index: PitchIndex;\n  octave: OctaveIndex;\n}\n\nconst C1_MIDI_NUMBER = 24;\nconst C4_MIDI_NUMBER = 60;\nconst B5_MIDI_NUMBER = 83;\n\nexport const LOWER_NOTE = C4_MIDI_NUMBER;\nexport const HIGHT_NOTE = B5_MIDI_NUMBER;\nexport const SEMITONES_IN_OCTAVE = 12;\n\nexport const NATURAL_PITCH_INDICES: PitchIndex[] = [0, 2, 4, 5, 7, 9, 11];\n\nexport const PITCHES_REGISTRY: Record<PitchIndex, NotePitch> = {\n  0: \"C\",\n  1: \"C\",\n  2: \"D\",\n  3: \"D\",\n  4: \"E\",\n  5: \"F\",\n  6: \"F\",\n  7: \"G\",\n  8: \"G\",\n  9: \"A\",\n  10: \"A\",\n  11: \"B\",\n};\n\nexport function fromMidi(midi: MidiValue): Note {\n  const pianoRange = midi - C1_MIDI_NUMBER;\n  const octave = (Math.floor(pianoRange / SEMITONES_IN_OCTAVE) + 1) as OctaveIndex;\n  const index = pianoRange % SEMITONES_IN_OCTAVE;\n  const pitch = PITCHES_REGISTRY[index];\n  const isSharp = !NATURAL_PITCH_INDICES.includes(index);\n  const type = isSharp ? \"sharp\" : \"natural\";\n  return { octave, pitch, index, type, midi };\n}\n\ninterface NoteGeneratorSettings {\n  fromNote?: MidiValue;\n  toNote?: MidiValue;\n}\n\nexport function generateNotes({\n  fromNote = LOWER_NOTE,\n  toNote = HIGHT_NOTE,\n}: NoteGeneratorSettings = {}): Note[] {\n  return Array(toNote - fromNote + 1)\n    .fill(0)\n    .map((_, index: number) => fromMidi(fromNote + index));\n}\n\nexport const notes = generateNotes();\n","import { useEffect, useState } from \"react\";\nimport { Key as KeyLabel } from \"../../domain/keyboard\";\ntype IsPressed = boolean;\ntype EventCode = string;\n\ninterface Settings {\n  watchKey: KeyLabel;\n  onStartPress: Function;\n  onFinishPress: Function;\n}\nfunction fromEventCode(code: EventCode): KeyLabel {\n  const prefixRegex = /Key|Digit/gi;\n  return code.replace(prefixRegex, \"\");\n}\nfunction equal(watchedKey: KeyLabel, eventCode: EventCode): boolean {\n  return fromEventCode(eventCode).toUpperCase() === watchedKey.toUpperCase();\n}\n\nexport function usePressObserver({ watchKey, onStartPress, onFinishPress }: Settings): IsPressed {\n  const [pressed, setPressed] = useState<IsPressed>(false);\n\n  useEffect(() => {\n    function handlePressStart({ code }: KeyboardEvent): void {\n      if (pressed || !equal(watchKey, code)) return;\n      setPressed(true);\n      onStartPress();\n    }\n\n    function handlePressFinish({ code }: KeyboardEvent): void {\n      if (!pressed || !equal(watchKey, code)) return;\n      setPressed(false);\n      onFinishPress();\n    }\n    document.addEventListener(\"keydown\", handlePressStart);\n    document.addEventListener(\"keyup\", handlePressFinish);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handlePressStart);\n      document.removeEventListener(\"keyup\", handlePressFinish);\n    };\n  }, [watchKey, pressed, setPressed, onStartPress, onFinishPress]);\n\n  return pressed;\n}\n","import React, { FunctionComponent, ReactEventHandler } from \"react\";\nimport clsx from \"clsx\";\nimport { NoteType } from \"../../domain/note\";\nimport { usePressObserver } from \"../PressObserver/usePressObserver\";\nimport \"./style.css\";\ninterface KeyProps {\n  type: NoteType;\n  label: string;\n  disabled?: boolean;\n  onUp: ReactEventHandler<HTMLButtonElement>;\n  onDown: ReactEventHandler<HTMLButtonElement>;\n}\nexport const Key: FunctionComponent<KeyProps> = (props) => {\n  const BackgroundColor = [\"#7eb8da\", \"#92ddea\", \"#ffa5d8\", \"#be9ddf\", \"#9579d1\"];\n  const color = BackgroundColor[Math.floor(Math.random() * BackgroundColor.length)];\n  const style = {\n    backgroundColor: `${color}`,\n    boxShadow: `0px 0px 20px 2px ${color}`,\n  };\n  const { type, label, onDown, onUp, ...rest } = props;\n  const pressed = usePressObserver({\n    watchKey: label,\n    onStartPress: onDown,\n    onFinishPress: onUp,\n  });\n  return (\n    <button\n      className={clsx(`key key--${type}`, pressed && \"is-pressed\")}\n      style={type === \"natural\" && pressed ? style : {}}\n      type=\"button\"\n      onMouseDown={onDown}\n      onMouseUp={onUp}\n      {...rest}\n    >\n      {label}\n    </button>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { selectKey } from \"../../domain/keyboard\";\nimport { MidiValue, notes } from \"../../domain/note\";\nimport { Key } from \"../Key/Key\";\nimport \"./style.css\";\n\nexport interface KeyboardProps {\n  loading: boolean;\n  play: (note: MidiValue) => Promise<void>;\n  stop: (note: MidiValue) => Promise<void>;\n}\n\nexport const Keyboard: FunctionComponent<KeyboardProps> = ({ loading, play, stop }) => {\n  return (\n    <div className=\"keyboard\">\n      {notes.map(({ midi, type, index, octave }) => {\n        const label = selectKey(octave, index);\n        return (\n          <Key\n            key={midi}\n            type={type}\n            label={label}\n            disabled={loading}\n            onDown={() => play(midi)}\n            onUp={() => stop(midi)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { useAudioContext } from \"../AudioContextProvider/useAudioContext\";\nimport { useSoundfont } from \"../../adapters/Soundfont/useSoundfont\";\nimport { Keyboard } from \"../Keyboard/Keyboard\";\nimport { useInstrument } from \"../../state/Instrument/InstrumentContext\";\nimport \"./style.css\";\n\nexport const KeyboardWithInstrument: FunctionComponent = () => {\n  const AudioContext = useAudioContext()!;\n  const { instrument } = useInstrument();\n  const { loading, play, stop, load, current } = useSoundfont({ AudioContext });\n  useEffect(() => {\n    if (!loading && instrument !== current) load(instrument);\n  }, [load, loading, current, instrument]);\n  return <Keyboard loading={loading} play={play} stop={stop} />;\n};\n","import { useState, useRef } from \"react\";\nimport { MidiValue } from \"../../domain/note\";\nimport { Optional } from \"../../domain/types\";\nimport Soundfont, { InstrumentName, Player } from \"soundfont-player\";\nimport { AudioNodesRegistry, DEFAULT_INSTRUMENT } from \"../../domain/sound\";\ninterface Settings {\n  AudioContext: AudioContextType;\n}\n\ninterface Adapter {\n  loading: boolean;\n  current: Optional<InstrumentName>;\n  load(instrument?: InstrumentName): Promise<void>;\n  play(note: MidiValue): Promise<void>;\n  stop(note: MidiValue): Promise<void>;\n}\n\nexport function useSoundfont({ AudioContext }: Settings): Adapter {\n  let activeNodes: AudioNodesRegistry = {};\n  const [current, setCurrent] = useState<Optional<InstrumentName>>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [player, setPlayer] = useState<Optional<Player>>(null);\n  const audio = useRef(new AudioContext());\n\n  async function load(instrument: InstrumentName = DEFAULT_INSTRUMENT) {\n    setLoading(true);\n    const player = await Soundfont.instrument(audio.current, instrument);\n    setCurrent(instrument);\n    setPlayer(player);\n    setLoading(false);\n  }\n\n  async function resume() {\n    return audio.current.state === \"suspended\" ? await audio.current.resume() : Promise.resolve();\n  }\n\n  async function play(note: MidiValue) {\n    await resume();\n    if (!player) return;\n\n    const node = player.play(note.toString());\n    activeNodes = { ...activeNodes, [note]: node };\n  }\n\n  async function stop(note: MidiValue) {\n    await resume();\n    if (!activeNodes[note]) return;\n\n    activeNodes[note]!.stop();\n    activeNodes = { ...activeNodes, [note]: null };\n  }\n  return {\n    loading,\n    current,\n    play,\n    stop,\n    load,\n  };\n}\n","import React, { FunctionComponent } from \"react\";\nimport { InstrumentContextProvider } from \"../../state/Instrument/Provider\";\nimport { InstrumentSelector } from \"../InstrumentSelector/InstrumentSelector\";\nimport { KeyboardWithInstrument } from \"../Keyboard/WithInstrument\";\n\nexport const Playground: FunctionComponent = () => {\n  return (\n    <InstrumentContextProvider>\n      <div className=\"playground\">\n        <KeyboardWithInstrument />\n        <InstrumentSelector />\n      </div>\n    </InstrumentContextProvider>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { NoAudioMessage } from \"../NoAudioMessage/NoAudioMessage\";\nimport { useAudioContext } from \"../AudioContextProvider/useAudioContext\";\nimport { Playground } from \"../Playground/Playground\";\nexport const Main: FunctionComponent = () => {\n  const AudioContext = useAudioContext();\n  return !!AudioContext ? <Playground /> : <NoAudioMessage />;\n};\n","import React from \"react\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport { Logo } from \"./components/Logo/Logo\";\nimport { Main } from \"./components/Main/Main\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Logo />\n      <main className=\"app-content\">\n        <Main />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}